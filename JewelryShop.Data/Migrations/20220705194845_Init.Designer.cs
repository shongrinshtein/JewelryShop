// <auto-generated />
using System;
using JewelryShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JewelryShop.Data.Migrations
{
    [DbContext(typeof(JewelryShopContextDB))]
    [Migration("20220705194845_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JewelryShop.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductBaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBaseId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SizeItemId")
                        .HasColumnType("int");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SizeItemId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.PhotoURI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductBaseId")
                        .HasColumnType("int");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductBaseId");

                    b.ToTable("PhotoURIs");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.ProductBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SizeProductId");

                    b.ToTable("ProductBases");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductBase");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float?>("Caliber")
                        .HasColumnType("real");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<int?>("ProductBaseId")
                        .HasColumnType("int");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductBaseId");

                    b.ToTable("Sizes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Size");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Item", b =>
                {
                    b.HasBaseType("JewelryShop.Data.Models.ProductBase");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasIndex("SupplierId");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Product", b =>
                {
                    b.HasBaseType("JewelryShop.Data.Models.ProductBase");

                    b.Property<bool>("ForSell")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Product");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.SizeItem", b =>
                {
                    b.HasBaseType("JewelryShop.Data.Models.Size");

                    b.HasDiscriminator().HasValue("SizeItem");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.SizeProduct", b =>
                {
                    b.HasBaseType("JewelryShop.Data.Models.Size");

                    b.HasDiscriminator().HasValue("SizeProduct");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Category", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.ProductBase", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductBaseId");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Material", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.SizeItem", null)
                        .WithMany("Materials")
                        .HasForeignKey("SizeItemId");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.PhotoURI", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.Material", null)
                        .WithMany("PhotosURI")
                        .HasForeignKey("MaterialId");

                    b.HasOne("JewelryShop.Data.Models.ProductBase", null)
                        .WithMany("PhotosURI")
                        .HasForeignKey("ProductBaseId");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.ProductBase", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.SizeProduct", null)
                        .WithMany("ProductsBase")
                        .HasForeignKey("SizeProductId");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Size", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.ProductBase", null)
                        .WithMany("Sizes")
                        .HasForeignKey("ProductBaseId");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Item", b =>
                {
                    b.HasOne("JewelryShop.Data.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.Material", b =>
                {
                    b.Navigation("PhotosURI");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.ProductBase", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("PhotosURI");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.SizeItem", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("JewelryShop.Data.Models.SizeProduct", b =>
                {
                    b.Navigation("ProductsBase");
                });
#pragma warning restore 612, 618
        }
    }
}
